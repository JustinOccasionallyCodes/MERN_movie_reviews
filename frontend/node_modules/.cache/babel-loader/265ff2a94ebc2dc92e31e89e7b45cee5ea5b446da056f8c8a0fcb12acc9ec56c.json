{"ast":null,"code":"import axios from \"axios\";\nclass MovieDataService {\n  getAll() {\n    let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return axios.get(`http://localhost:3000/api/v1/movies?page=${page}`);\n  }\n  get(id) {\n    return axios.get(`http://localhost:3000/api/v1/movies/id/${id}`);\n  }\n  find(query) {\n    let by = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"title\";\n    let page = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    return axios.get(`http://localhost:3000/api/v1/movies?${by}=${query}&page=${page}`);\n  }\n  createReview(data) {\n    return axios.post(\"http://localhost:3000/api/v1/movies/review\", data);\n  }\n  updateReview(data) {\n    return axios.put(\"http://localhost:3000/api/v1/movies/review\", data);\n  }\n  deleteReview(id, userId) {\n    return axios.delete(\"http://localhost:5000/api/v1/movies/review\", {\n      data: {\n        review_id: id,\n        user_id: userId\n      }\n    });\n  }\n  getRatings() {\n    return axios.get(\"http://localhost:3000/api/v1/movies/ratings\");\n  }\n}\nexport default new MovieDataService();","map":{"version":3,"names":["axios","MovieDataService","getAll","page","get","id","find","query","by","createReview","data","post","updateReview","put","deleteReview","userId","delete","review_id","user_id","getRatings"],"sources":["C:/Users/lenovo/Documents/Code College/MERN/movie-reviews/frontend/src/services/movies.js"],"sourcesContent":["import axios from \"axios\";\n\nclass MovieDataService {\n\n    getAll(page = 0) {\n        return axios.get(`http://localhost:3000/api/v1/movies?page=${page}`)\n    }\n    get(id) {\n        return axios.get(`http://localhost:3000/api/v1/movies/id/${id}`)\n    }\n    find(query, by = \"title\", page = 0) {\n        return axios.get(\n            `http://localhost:3000/api/v1/movies?${by}=${query}&page=${page}`\n        )\n    }\n    createReview(data) {\n        return axios.post(\"http://localhost:3000/api/v1/movies/review\", data)\n    }\n    updateReview(data) {\n        return axios.put(\"http://localhost:3000/api/v1/movies/review\", data)\n    }\n    deleteReview(id, userId) {\n        return axios.delete(\n            \"http://localhost:5000/api/v1/movies/review\",\n            { data: { review_id: id, user_id: userId } }\n        )\n    }\n    getRatings() {\n        return axios.get(\"http://localhost:3000/api/v1/movies/ratings\")\n    }\n}\nexport default new MovieDataService();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,gBAAgB,CAAC;EAEnBC,MAAM,GAAW;IAAA,IAAVC,IAAI,uEAAG,CAAC;IACX,OAAOH,KAAK,CAACI,GAAG,CAAE,4CAA2CD,IAAK,EAAC,CAAC;EACxE;EACAC,GAAG,CAACC,EAAE,EAAE;IACJ,OAAOL,KAAK,CAACI,GAAG,CAAE,0CAAyCC,EAAG,EAAC,CAAC;EACpE;EACAC,IAAI,CAACC,KAAK,EAA0B;IAAA,IAAxBC,EAAE,uEAAG,OAAO;IAAA,IAAEL,IAAI,uEAAG,CAAC;IAC9B,OAAOH,KAAK,CAACI,GAAG,CACX,uCAAsCI,EAAG,IAAGD,KAAM,SAAQJ,IAAK,EAAC,CACpE;EACL;EACAM,YAAY,CAACC,IAAI,EAAE;IACf,OAAOV,KAAK,CAACW,IAAI,CAAC,4CAA4C,EAAED,IAAI,CAAC;EACzE;EACAE,YAAY,CAACF,IAAI,EAAE;IACf,OAAOV,KAAK,CAACa,GAAG,CAAC,4CAA4C,EAAEH,IAAI,CAAC;EACxE;EACAI,YAAY,CAACT,EAAE,EAAEU,MAAM,EAAE;IACrB,OAAOf,KAAK,CAACgB,MAAM,CACf,4CAA4C,EAC5C;MAAEN,IAAI,EAAE;QAAEO,SAAS,EAAEZ,EAAE;QAAEa,OAAO,EAAEH;MAAO;IAAE,CAAC,CAC/C;EACL;EACAI,UAAU,GAAG;IACT,OAAOnB,KAAK,CAACI,GAAG,CAAC,6CAA6C,CAAC;EACnE;AACJ;AACA,eAAe,IAAIH,gBAAgB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}