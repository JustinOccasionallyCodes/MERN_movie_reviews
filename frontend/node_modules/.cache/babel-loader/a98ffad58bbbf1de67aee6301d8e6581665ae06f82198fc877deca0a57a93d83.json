{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Documents\\\\Code College\\\\MERN\\\\movie-reviews\\\\frontend\\\\src\\\\components\\\\movie.js\",\n  _s = $RefreshSig$();\n//a component to list a single movie\n\nimport React, { useState, useEffect } from 'react';\nimport MovieDataService from '../services/movies';\nimport { Link } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\n//import Media from 'react-bootstrap/Media';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movie = props => {\n  _s();\n  const [movie, setMovie] = useState({\n    id: null,\n    title: \"\",\n    rated: \"\",\n    reviews: []\n  });\n  const getMovie = id => {\n    MovieDataService.get(id).then(response => {\n      setMovie(response.data);\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n  useEffect(() => {\n    getMovie(props.match.params.id);\n  }, [props.match.params.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: movie.poster + \"/100px250\",\n            fluid: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              as: \"h5\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                children: movie.plot\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this), props.user && /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/movies/\" + props.match.params.id + \"/review\",\n                children: \"Add Review\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 18\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 14\n          }, this), movie.reviews.map((review, index) => {\n            return /*#__PURE__*/_jsxDEV(Media, {\n              children: /*#__PURE__*/_jsxDEV(Media.Body, {\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: [review.name + \" reviewed on \", \" \", moment(review.date).format(\"Do MMMM YYYY\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: review.review\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 25\n                }, this), props.user && props.user.id === review.user_id && /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: {\n                        pathname: \"/movies/\" + props.match.params.id + \"/review\",\n                        state: {\n                          currentReview: review\n                        }\n                      },\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 34\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"link\",\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 34\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 23\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Movie, \"9Q7I2xk9FYl4RDkvO08dZSgaq0g=\");\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useState","useEffect","MovieDataService","Link","Card","Container","Image","Col","Row","Button","moment","Movie","props","movie","setMovie","id","title","rated","reviews","getMovie","get","then","response","data","console","log","catch","e","match","params","poster","plot","user","map","review","index","name","date","format","user_id","pathname","state","currentReview"],"sources":["C:/Users/lenovo/Documents/Code College/MERN/movie-reviews/frontend/src/components/movie.js"],"sourcesContent":["//a component to list a single movie\r\n\r\nimport React, {useState, useEffect} from 'react';\r\nimport MovieDataService from '../services/movies';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Button from 'react-bootstrap/Button';\r\n//import Media from 'react-bootstrap/Media';\r\nimport moment from 'moment';\r\n\r\nconst Movie = props => {\r\n  const [movie, setMovie] = useState({\r\n    id: null,\r\n    title: \"\",\r\n    rated:\"\",\r\n    reviews:[]\r\n  })\r\n\r\n  const getMovie = id =>{\r\n    MovieDataService.get(id)\r\n    .then(response => {\r\n      setMovie(response.data)\r\n      console.log(response.data)\r\n    })\r\n    .catch(e =>{\r\n      console.log(e)\r\n    })\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getMovie(props.match.params.id)\r\n  },[props.match.params.id])\r\n   \r\n  return (\r\n        <div>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Image src={movie.poster+\"/100px250\"} fluid />\r\n           </Col>\r\n             <Col>\r\n              <Card>\r\n                <Card.Header as=\"h5\">{movie.title}</Card.Header>\r\n                <Card.Body>\r\n                  <Card.Text>\r\n                    {movie.plot}\r\n                 </Card.Text>\r\n                  {props.user &&\r\n                 <Link to={\"/movies/\" + props.match.params.id + \"/review\"}>\r\n                     Add Review\r\n                 </Link>}\r\n                </Card.Body>\r\n              </Card>\r\n             <br></br>\r\n             <h2>Reviews</h2>\r\n             <br></br>\r\n             {movie.reviews.map((review, index)=>{\r\n                return (\r\n                    <Media key={index}>\r\n                      <Media.Body>\r\n                      <h5>\r\n                        {review.name+\" reviewed on \"} {moment(review.date).format(\"Do MMMM YYYY\")}\r\n                      </h5>\r\n                        <p>{review.review}</p>\r\n                        {props.user && props.user.id === review.user_id &&\r\n                          <Row>\r\n                            <Col><Link to={{\r\n                              pathname:\"/movies/\"+\r\n                                props.match.params.id+\r\n                                \"/review\",\r\n                              state: {currentReview: review}\r\n                              }}>Edit</Link>\r\n                            </Col>\r\n                            <Col><Button variant=\"link\">Delete</Button></Col>\r\n                          </Row>\r\n                        }\r\n                    </Media.Body>\r\n                  </Media>\r\n                )\r\n              })}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    )\r\n}\r\nexport default Movie;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}