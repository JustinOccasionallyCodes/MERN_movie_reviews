{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Documents\\\\Code College\\\\MERN\\\\movie-reviews\\\\frontend\\\\src\\\\components\\\\movie.js\",\n  _s = $RefreshSig$();\n//a component to list a single movie\n\nimport React, { useState, useEffect } from 'react';\nimport MovieDataService from '../services/movies';\nimport { Link } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movie = props => {\n  _s();\n  const [movie, setMovie] = useState({\n    id: null,\n    title: \"\",\n    rated: \"\",\n    reviews: []\n  });\n  const getMovie = id => {\n    MovieDataService.get(id).then(response => {\n      setMovie(response.data);\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n  useEffect(() => {\n    getMovie(props.match.params.id);\n  }, [props.match.params.id]);\n  const deleteReview = (reviewId, index) => {\n    MovieDataService.deleteReview(reviewId, props.user.id).then(response => {\n      setMovie(prevState => {\n        prevState.reviews.splice(index, 1);\n        return {\n          ...prevState\n        };\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: movie.poster + \"/100px250\",\n            fluid: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              as: \"h5\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                children: movie.plot\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 27\n              }, this), props.user && /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/movies/\" + props.match.params.id + \"/review\",\n                children: \"Add Review\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this), movie.reviews.map((review, index) => {\n            return /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: [review.name + \" reviewed on \", \"  \", moment(review.date).format(\"Do MMMM YYYY\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: review.review\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 39\n                }, this), props.user && props.user.id === review.user_id && /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: {\n                        pathname: \"/movies/\" + props.match.params.id + \"/review\",\n                        state: {\n                          currentReview: review\n                        }\n                      },\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 50\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"link\",\n                      onClick: () => deleteReview(review._id, index),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 50\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 35\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 31\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Movie, \"z9MF7uRTfD8bM8ahd5lJuDRDJCI=\");\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useState","useEffect","MovieDataService","Link","Card","Container","Image","Col","Row","Button","moment","Movie","props","movie","setMovie","id","title","rated","reviews","getMovie","get","then","response","data","console","log","catch","e","match","params","deleteReview","reviewId","index","user","prevState","splice","poster","plot","map","review","name","date","format","user_id","pathname","state","currentReview","_id"],"sources":["C:/Users/lenovo/Documents/Code College/MERN/movie-reviews/frontend/src/components/movie.js"],"sourcesContent":["//a component to list a single movie\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport MovieDataService from '../services/movies'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport moment from 'moment'\r\n\r\nconst Movie = props => {\r\n\r\n    const [movie, setMovie] = useState({\r\n        id: null,\r\n        title: \"\",\r\n        rated: \"\",\r\n        reviews: []\r\n    })\r\n\r\n    const getMovie = id => {\r\n        MovieDataService.get(id)\r\n            .then(response => {\r\n                setMovie(response.data)\r\n                console.log(response.data)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMovie(props.match.params.id)\r\n    }, [props.match.params.id])\r\n\r\n    const deleteReview = (reviewId, index) => {\r\n        MovieDataService.deleteReview(reviewId, props.user.id)\r\n            .then(response => {\r\n                setMovie((prevState) => {\r\n                    prevState.reviews.splice(index, 1)\r\n                    return ({\r\n                        ...prevState\r\n                    })\r\n                })\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container><Row>\r\n              <Col>\r\n                <Image src={movie.poster + \"/100px250\"} fluid />\r\n              </Col>\r\n              <Col>\r\n                  <Card>\r\n                      <Card.Header as=\"h5\">{movie.title}</Card.Header>\r\n                      <Card.Body>\r\n                          <Card.Text>\r\n                              {movie.plot}\r\n                          </Card.Text>\r\n                          {props.user &&\r\n                              <Link to={\"/movies/\" + props.match.params.id + \"/review\"}>\r\n                                Add Review\r\n                              </Link>}\r\n                      </Card.Body>\r\n                  </Card>\r\n                  <br></br>\r\n                  <h2>Reviews</h2>\r\n                  <br></br>\r\n                  {movie.reviews.map((review, index) => {\r\n                      return (\r\n                              <Card key={index}>\r\n                                  <Card.Body>\r\n                                      <h5>{review.name + \" reviewed on \"}  {moment(review.date).format(\"Do MMMM YYYY\")}</h5>\r\n                                      <p>{review.review}</p>\r\n                                      {props.user && props.user.id === review.user_id &&\r\n                                        <Row>\r\n                                            <Col><Link to={{\r\n                                                pathname: \"/movies/\" +\r\n                                                props.match.params.id +\r\n                                                \"/review\",\r\n                                                state: { currentReview: review }\r\n                                            }}>Edit</Link>\r\n                                            </Col>\r\n                                            <Col><Button variant=\"link\" onClick={() => deleteReview(review._id, index)}>Delete</Button></Col>\r\n                                        </Row>\r\n                                      }\r\n                                    </Card.Body>\r\n                              </Card>\r\n                            )\r\n                        })}\r\n                </Col>\r\n            </Row></Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Movie;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}